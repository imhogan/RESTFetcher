{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Load the S3 files for the Waste Analysis Tool for Think Perform - built by THINKronicity Pty Ltd.",
    "Metadata": {"AWS::CloudFormation::Interface": {
        "ParameterGroups": [
            {
                "Label": {"default": "Project Configuration"},
                "Parameters": [
                    "ProjectZipFilesList",
                    "ProjectToolsStack",
                    "EmailSender",
                    "EmailSenderName",
                    "EnableDebug"
                ]
            },
            {
                "Label": {"default": "Qrvey Details"},
                "Parameters": [
                    "QrveyAPIKey",
                    "QrveyUserEmail",
                    "QrveyUserFirstname",
                    "QrveyUserLastname",
                    "QrveyUserPassword",
                    "QrveyUserOrganisation",
                    "QrveyDomain"
                ]
            },
            {
                "Label": {"default": "Custom Resource Lambda Functions"},
                "Parameters": [
                    "LookupFunctionLambdaKey",
                    "S3PutFileKey",
                    "S3ZipFileLoaderKey"
                ]
            }
        ],
        "ParameterLabels": {"EmailSender": {"default": "Email address to send emails from?"}}
    }},
    "Parameters": {
        "EmailSender": {
            "Description": "Email address registered with AWS SES in the selected SES region (EmailRegion). This email address needs to conform to sender validation protocol for email recipients to not block emails.",
            "Type": "String",
            "Default": "ses.sender@my.com"
        },
        "EmailSenderName": {
            "Description": "Display name for sent emails.",
            "Type": "String",
            "Default": "Qrvey Administrator"
        },
        "EmailRegion": {
            "Description": "The SES Region for sending emails.",
            "Type": "String",
            "AllowedValues": [
              "us-east-1",
              "us-west-2",
              "eu-west-1"
            ],
            "Default": "us-east-1"
        },
        "QrveyAPIKey": {
            "Description": "Your Qrvey API Key.",
            "Type": "String",
            "Default": ""
        },
        "QrveyUserEmail": {
            "Description": "Email for Qrvey user. The Templates list and Qrvey result pages will be emailed to this address.",
            "Type": "String",
            "Default": "Somebody@hear.me"
        },
        "QrveyUserFirstname": {
            "Description": "Qrvey user's first name.",
            "Type": "String",
            "Default": "Kwer"
        },
        "QrveyUserLastname": {
            "Description": "Qrvey user's last name.",
            "Type": "String",
            "Default": "Vay"
        },
        "QrveyUserPassword": {
            "Description": "Qrvey user's password.",
            "Type": "String",
            "Default": "ReallySecret",
            "NoEcho": "true"
        },
        "QrveyUserOrganisation": {
            "Description": "Qrvey user's organisation.",
            "Type": "String",
            "Default": "Response Collector"
        },
        "QrveyDomain": {
            "Description": "Qrvey domain for results page.",
            "Type": "String",
            "Default": "https://api.qrvey.com"
        },
        "EnableDebug": {
            "Description": "Enable debugging?",
            "Type": "String",
            "AllowedValues": [
                "true",
                "false"
            ],
            "Default": "true"
        },
        "S3ZipFileLoaderKey": {
            "Description": "Zip file for S3 Zip File Loader function",
            "Type": "String",
            "Default": "au-com-thinkronicity-S3ZipFileLoader-V1.1.2.zip"
        },
        "S3PutFileKey": {
            "Description": "Zip file for S3 Put File function",
            "Type": "String",
            "Default": "au-com-thinkronicity-PutS3File-V1.0.zip"
        },
        "LookupFunctionLambdaKey": {
            "Description": "Lookup Function key name",
            "Type": "String",
            "MinLength": 1,
            "MaxLength": 255,
            "AllowedPattern": "^[a-zA-Z][-a-zA-Z0-9.]*$",
            "Default": "com-amazon-aws-cloudformation-helper-lookup-v2.zip"
        },
        "ProjectZipFilesList": {
            "Description": "Project List Files",
            "Type": "CommaDelimitedList",
            "Default": "au-com-thinkronicity-RestFetcher-QrveySample2-V1.0.0.zip"
        },
        "ProjectToolsStack": {
            "Description": "The stack containing the base framework for the system.",
            "Type": "String",
            "MinLength": 1,
            "MaxLength": 255,
            "AllowedPattern": "^[a-zA-Z][-a-zA-Z0-9]*$",
            "Default": "qrvey-sample-2-tools"
        }
    },
    "Mappings": {"AWSRegion2Bucket": {
        "us-east-1": {
            "OpenCode": "au-com-thinkronicity-opencode-usea1",
            "ClientCode": "au-com-thinkronicity-clientcode-apse2"
        },
        "us-east-2": {
            "OpenCode": "au-com-thinkronicity-opencode-usea2",
            "ClientCode": "au-com-thinkronicity-clientcode-apse2"
        },
        "us-west-1": {
            "OpenCode": "au-com-thinkronicity-opencode-uswe1",
            "ClientCode": "au-com-thinkronicity-clientcode-apse2"
        },
        "us-west-2": {
            "OpenCode": "au-com-thinkronicity-opencode-uswe2",
            "ClientCode": "au-com-thinkronicity-clientcode-apse2"
        },
        "sa-east-1": {
            "OpenCode": "au-com-thinkronicity-opencode-saea1",
            "ClientCode": "au-com-thinkronicity-clientcode-apse2"
        },
        "ap-northeast-1": {
            "OpenCode": "au-com-thinkronicity-opencode-apne1",
            "ClientCode": "au-com-thinkronicity-clientcode-apse2"
        },
        "ap-northeast-2": {
            "OpenCode": "au-com-thinkronicity-opencode-apne2",
            "ClientCode": "au-com-thinkronicity-clientcode-apse2"
        },
        "ap-south-1": {
            "OpenCode": "au-com-thinkronicity-opencode-aps1",
            "ClientCode": "au-com-thinkronicity-clientcode-apse2"
        },
        "ap-southeast-1": {
            "OpenCode": "au-com-thinkronicity-opencode-apse1",
            "ClientCode": "au-com-thinkronicity-clientcode-apse2"
        },
        "ap-southeast-2": {
            "OpenCode": "au-com-thinkronicity-opencode-apse2",
            "ClientCode": "au-com-thinkronicity-clientcode-apse2"
        },
        "eu-central-1": {
            "OpenCode": "au-com-thinkronicity-opencode-euce1",
            "ClientCode": "au-com-thinkronicity-clientcode-apse2"
        },
        "eu-west-1": {
            "OpenCode": "au-com-thinkronicity-opencode-euwe1",
            "ClientCode": "au-com-thinkronicity-clientcode-apse2"
        }
    }},
    "Resources": {
        "LambdaExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {"Service": "lambda.amazonaws.com"},
                            "Action": "sts:AssumeRole"
                        },
                        {
                            "Effect": "Allow",
                            "Principal": {"Service": "apigateway.amazonaws.com"},
                            "Action": "sts:AssumeRole"
                        },
                        {
                            "Effect": "Allow",
                            "Principal": {"Service": "s3.amazonaws.com"},
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Path": {"Fn::Join": [
                    "",
                    [
                        "/",
                        {"Fn::ImportValue" : {"Fn::Sub" : "${ProjectToolsStack}-SelectedProjectPrefix"}},
                        "/"
                    ]
                ]},
                "Policies": [{
                    "PolicyName": "AccessProjectS3FilesAndSES",
                    "PolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Effect": "Allow",
                                "Action": ["s3:*"],
                                "Resource": [{"Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:s3:::",
                                        {"Fn::ImportValue" : {"Fn::Sub" : "${ProjectToolsStack}-AccessProjectS3FilesBucket"}},
                                        "/*"
                                    ]
                                ]}]
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "s3:Get*",
                                    "s3:List*"
                                ],
                                "Resource": [{"Fn::Join": [
                                    "",
                                    [
                                        "arn:aws:s3:::",
                                        {"Fn::FindInMap": [
                                            "AWSRegion2Bucket",
                                            {"Ref": "AWS::Region"},
                                            "ClientCode"
                                        ]},
                                        "/*"
                                    ]
                                ]}]
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "logs:CreateLogGroup",
                                    "logs:CreateLogStream",
                                    "logs:PutLogEvents"
                                ],
                                "Resource": "arn:aws:logs:*:*:*"
                            }
                        ]
                    }
                }]
            }
        },
        "S3ZipLoaderLambda": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {"Fn::FindInMap": [
                        "AWSRegion2Bucket",
                        {"Ref": "AWS::Region"},
                        "OpenCode"
                    ]},
                    "S3Key": {"Ref": "S3ZipFileLoaderKey"}
                },
                "Runtime": "java8",
                "Handler": "au.com.thinkronicity.aws.S3ZipFileLoader",
                "Description": "CloudFormation S3 Zip Loader from https://github.com/imhogan/S3ZipFileLoader",
                "Timeout": 300,
                "MemorySize": 768,
                "Role": {"Fn::GetAtt": [
                    "LambdaExecutionRole",
                    "Arn"
                ]}
            }
        },
        "ProjectFilesLoad": {
            "Type": "Custom::S3ZipLoader",
            "DeletionPolicy": "Retain",
            "Properties": {
                "ServiceToken": {"Fn::GetAtt": [
                    "S3ZipLoaderLambda",
                    "Arn"
                ]},
                "SourceBucket": {"Fn::FindInMap": [
                    "AWSRegion2Bucket",
                    {"Ref": "AWS::Region"},
                    "OpenCode"
                ]},
                "SourceKeys": {"Ref": "ProjectZipFilesList"},
                "TargetBucket": {"Fn::ImportValue" : {"Fn::Sub" : "${ProjectToolsStack}-AccessProjectS3FilesBucket"}},
                "PublicRead": "^(images/|xsl/|xsl/f/|fop/).*$",
                "Debug": "true"
            }
        },
        "S3PutFileLambda": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {"Fn::FindInMap": [
                        "AWSRegion2Bucket",
                        {"Ref": "AWS::Region"},
                        "OpenCode"
                    ]},
                    "S3Key": {"Ref": "S3PutFileKey"}
                },
                "Runtime": "nodejs4.3",
                "Handler": "index.handler",
                "Timeout": "30",
                "Description": "CloudFormation S3 Put File Helper",
                "MemorySize": 128,
                "Role": {"Fn::GetAtt": [
                    "LambdaExecutionRole",
                    "Arn"
                ]}
            }
        },
        "SavePropertiesForEnvironment": {
            "Type": "Custom::S3FilePut",
            "Properties": {
                "ServiceToken": {"Fn::GetAtt": [
                    "S3PutFileLambda",
                    "Arn"
                ]},
                "Source": {
                    "filetext": {"Fn::Join": [
                        "\n",
                        [
                            "# Qrvey configuration file for RESTFetcher.",
                            "#",
                            "# Note ${S3_Bucket} will be replaced by the value of the parameter S3_Bucket, ",
                            "# passed in by the caller or from LambdaEventsMap.xml. This allows the bucket ",
                            "# name holding the configuration file to be used.",
                            "#",
                            "# Author Ian Hogan, Ian_MacDonald_Hogan@yahoo.com",
                            "# Endpoint for web service ",
                            "service.endPoint:https://api.qrvey.com",
                            "# Default timeout for REST interface",
                            "service.timeout:10000",
                            "# Debug tracing option",
                            {"Fn::Join": [
                                "",
                                [
                                    "trace.debug:",
                                    {"Ref": "EnableDebug"}
                                ]
                            ]},
                            "# Depth limit to prevent infinite recursion",
                            "service.depthLimit:5",
                            "# Commands file for RESTFetcher",
                            "service.commandsFile:s3://${S3_Bucket}/config/QrveyCommands.xml",
                            "# Default ContentType for request body",
                            "service.contentType:application/json; charset=UTF-8",
                            "# Region for SES ",
                            {"Fn::Join": [
                                "",
                                [
                                    "parameter.AWS.SES_Region:",
                                    {"Ref": "EmailRegion"}
                                ]
                            ]},
                            "# Email sender details",
                            "# Warning: Sender address needs to conform to sender validation protocol for email recipients to not block emails.",
                            {"Fn::Join": [
                                "",
                                [
                                    "parameter.EmailSender:",
                                    {"Ref": "EmailSender"}
                                ]
                            ]},
                            {"Fn::Join": [
                                "",
                                [
                                    "parameter.EmailSenderName:",
                                    {"Ref": "EmailSenderName"}
                                ]
                            ]},
                            "# System Name",
                            {"Fn::Join": [
                                "",
                                [
                                    "parameter.System:",
                                    {"Ref": "SystemName"},
                                    " ",
                                    {"Ref": "TargetEnvironment"}
                                ]
                            ]},
                            "# Parameters for Apache FOP make sure the region is correct for the S3 Bucket",
                            {"Fn::Join": [
                                "",
                                [
                                    "parameter.FOP_BASE_URI:https://s3-",
                                    {"Ref": "AWS::Region"},
                                    ".amazonaws.com/${S3_Bucket}/fop"
                                ]
                            ]},
                            "parameter.FOP_CONFIG:fop-aws.xconf",
                            "# Log folder for debugging.",
                            "parameter.REST_Log_Path:REST_Logs",
                            "# API Key for qrvey calls",
                            {"Fn::Join": [
                                "",
                                [
                                    "parameter.API_KEY:",
                                    {"Ref": "QrveyAPIKey"}
                                ]
                            ]},
                            "# Survey user details",
                            {"Fn::Join": [
                                "",
                                [
                                    "parameter.UserEmail:",
                                    {"Ref": "QrveyUserEmail"}
                                ]
                            ]},
                            {"Fn::Join": [
                                "",
                                [
                                    "parameter.UserFirstname:",
                                    {"Ref": "QrveyUserFirstname"}
                                ]
                            ]},
                            {"Fn::Join": [
                                "",
                                [
                                    "parameter.UserLastname:",
                                    {"Ref": "QrveyUserLastname"}
                                ]
                            ]},
                            {"Fn::Join": [
                                "",
                                [
                                    "parameter.UserPassword:",
                                    {"Ref": "QrveyUserPassword"}
                                ]
                            ]},
                            {"Fn::Join": [
                                "",
                                [
                                    "parameter.UserOrganisation:",
                                    {"Ref": "QrveyUserOrganisation"}
                                ]
                            ]},
                            "# Results S3 Bucket Region",
                            {"Fn::Join": [
                                "",
                                [
                                    "parameter.ResultsBucketRegion:",
                                    {"Ref": "AWS::Region"}
                                ]
                            ]},
                            "# Results S3 Bucket",
                            "parameter.ResultsBucket:${S3_Bucket}",
                            "# Results HTML Pages path",
                            "parameter.ResultsPath:results/",
                            "# Results domain",
                            {"Fn::Join": [
                                "",
                                [
                                    "parameter.ResultsDomain:",
                                    {"Ref": "QrveyDomain"}
                                ]
                            ]}
                        ]
                    ]},
                    "contentType": "text/x-java-properties"
                },
                "Target": {
                    "Bucket": {"Fn::ImportValue" : {"Fn::Sub" : "${ProjectToolsStack}-AccessProjectS3FilesBucket"}},
                    "Key": "config/Qrvey2.properties"
                },
                "Debug": "true"
            },
            "DependsOn": ["ProjectFilesLoad"]
        }
    },
    "Outputs": {
        "LambdaExecutionRoleArn": {
            "Value": {"Fn::GetAtt": [
                "LambdaExecutionRole",
                "Arn"
            ]},
            "Description": "Unique resource ID of the IAM Role allocated to the S3 Zip Loader Lambda Functions.",
            "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-LambdaExecutionRoleArn" }}
        },
        "S3ZipLoaderLambdaArn": {
            "Value": {"Fn::GetAtt": [
                "S3ZipLoaderLambda",
                "Arn"
            ]},
            "Description": "Unique resource ID of the S3 Zip Loader Lamba Function.",
            "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-S3ZipLoaderLambdaArn" }}
        },
        "ProjectFilesLoadResult": {
            "Value": {"Fn::GetAtt": [
                "ProjectFilesLoad",
                "SourceZips"
            ]},
            "Description": "The result message from the S3 Zip Loader."
        }
    }
}