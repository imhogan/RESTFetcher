{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Define API Gateway for survey processing trigger for the Waste Analysis Tool for Think Perform - built by THINKronicity Pty Ltd..",
    "Parameters": {
        "APIName": {
            "Description": "The name of the API",
            "Type": "String",
            "MinLength": 1,
            "MaxLength": 255,
            "AllowedPattern": "^[a-zA-Z][-a-zA-Z0-9]*$",
            "Default": "OurVillageMonitorTrigger"
        },
        "DeployApi": {
          "Description": "Deploy the API",
          "Type": "String",
          "AllowedValues": [
            "Yes",
            "No"
          ],
          "Default": "Yes"
        },
        "CorsOrigin": {
            "Description": "The domain from which the endpoint will be called. Leave empty if the endpoint will be called from the S3 Bucket web page.",
            "Type": "String",
            "MinLength": 1,
            "MaxLength": 255,
            "AllowedPattern": "^http[s]?:\\/\\/[^:\\/\\s]+$",
            "Default": ""
        },
        "ProjectToolsStack": {
            "Description": "The stack containing the tool resources.",
            "Type": "String",
            "MinLength": 1,
            "MaxLength": 255,
            "AllowedPattern": "^[a-zA-Z][-a-zA-Z0-9]*$",
            "Default": "qrvey-sample-2-tools"
        }
    },
  "Mappings": {
    "AWSRegion2Bucket": {
      "us-east-1": {
        "OpenCode": "au-com-thinkronicity-opencode-usea1",
        "ClientCode": "au-com-thinkronicity-clientcode-apse2"
      },
      "us-east-2": {
        "OpenCode": "au-com-thinkronicity-opencode-usea2",
        "ClientCode": "au-com-thinkronicity-clientcode-apse2"
      },
      "us-west-1": {
        "OpenCode": "au-com-thinkronicity-opencode-uswe1",
        "ClientCode": "au-com-thinkronicity-clientcode-apse2"
      },
      "us-west-2": {
        "OpenCode": "au-com-thinkronicity-opencode-uswe2",
        "ClientCode": "au-com-thinkronicity-clientcode-apse2"
      },
      "sa-east-1": {
        "OpenCode": "au-com-thinkronicity-opencode-saea1",
        "ClientCode": "au-com-thinkronicity-clientcode-apse2"
      },
      "ap-northeast-1": {
        "OpenCode": "au-com-thinkronicity-opencode-apne1",
        "ClientCode": "au-com-thinkronicity-clientcode-apse2"
      },
      "ap-northeast-2": {
        "OpenCode": "au-com-thinkronicity-opencode-apne2",
        "ClientCode": "au-com-thinkronicity-clientcode-apse2"
      },
      "ap-south-1": {
        "OpenCode": "au-com-thinkronicity-opencode-aps1",
        "ClientCode": "au-com-thinkronicity-clientcode-apse2"
      },
      "ap-southeast-1": {
        "OpenCode": "au-com-thinkronicity-opencode-apse1",
        "ClientCode": "au-com-thinkronicity-clientcode-apse2"
      },
      "ap-southeast-2": {
        "OpenCode": "au-com-thinkronicity-opencode-apse2",
        "ClientCode": "au-com-thinkronicity-clientcode-apse2"
      },
      "eu-central-1": {
        "OpenCode": "au-com-thinkronicity-opencode-euce1",
        "ClientCode": "au-com-thinkronicity-clientcode-apse2"
      },
      "eu-west-1": {
        "OpenCode": "au-com-thinkronicity-opencode-euwe1",
        "ClientCode": "au-com-thinkronicity-clientcode-apse2"
      }
    }
  },
    "Conditions" : {
        "DeployApiYes" : {"Fn::Equals" : [{"Ref" : "DeployApi"}, "Yes"]},
        "CorsOriginIsS3" : {"Fn::Equals" : [{"Ref" : "CorsOrigin"}, ""]}
    },
    "Resources": {
        "OVWSRMApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "Name": {"Ref": "APIName"},
                "Description": "An API to allow the Survey end page link to trigger production of post-processing."
            }
        },
        "OVWSRMSurveyResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "RestApiId": {"Ref": "OVWSRMApi"},
                "ParentId": {"Fn::GetAtt": [
                    "OVWSRMApi",
                    "RootResourceId"
                ]},
                "PathPart": "survey"
            }
        },
        "OVWSRMSurveyIdResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "RestApiId": {"Ref": "OVWSRMApi"},
                "ParentId": {"Ref": "OVWSRMSurveyResource"},
                "PathPart": "{userid}"
            }
        },
        "OVWSRMSurveyIdRespondentReportsOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "RestApiId": {"Ref": "OVWSRMApi"},
                "ResourceId": {"Ref": "OVWSRMSurveyIdResource"},
                "HttpMethod": "OPTIONS",
                "AuthorizationType": "NONE",
                "Integration": {
                    "Type": "MOCK",
                    "RequestTemplates": {"application/json": "{\"statusCode\":200}"},
                    "IntegrationResponses": [{
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-amz-security-token'",
                            "method.response.header.Access-Control-Allow-Origin": {"Fn::Join": [
                                "",
                                [
                                    "'",
                                    {"Fn::If": [
                                        "CorsOriginIsS3", 
                                        {"Fn::Sub" : "s3-${AWS::Region}.amazonaws.com"}, 
                                        {"Ref": "CorsOrigin"}
                                      ]
                                    },
                                    "'"
                                ]
                            ]},
                            "method.response.header.Access-Control-Allow-Expose-Headers": "'Access-Control-Allow-Origin'",
                            "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'"
                        },
                        "SelectionPattern": "",
                        "StatusCode": "200"
                    }]
                },
                "MethodResponses": [{
                    "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Headers": true,
                        "method.response.header.Access-Control-Allow-Origin": true,
                        "method.response.header.Access-Control-Allow-Expose-Headers": true,
                        "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "StatusCode": "200"
                }]
            }
        },
        "OVWSRMSurveyIdRespondentReportsGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "RestApiId": {"Ref": "OVWSRMApi"},
                "ResourceId": {"Ref": "OVWSRMSurveyIdResource"},
                "HttpMethod": "GET",
                "AuthorizationType": "NONE",
                "RequestParameters": {
                    "method.request.querystring.project": true,
                    "method.request.querystring.qrveyid": true,
                    "method.request.querystring.form": true,
                    "method.request.path.userid": true
                },
                "Integration": {
                    "Type": "AWS",
                    "IntegrationHttpMethod": "POST",
                    "Uri": {"Fn::Join": [
                        "",
                        [
                            "arn:aws:apigateway:",
                            {"Ref": "AWS::Region"},
                            ":lambda:path/2015-03-31/functions/",
                            {"Fn::ImportValue" : {"Fn::Sub" : "${ProjectToolsStack}-RESTFetcherLambdaArn"}},
                            "/invocations"
                        ]
                    ]},
                    "RequestTemplates": {"application/json": {"Fn::Join": [
                        "\n",
                        [
                            "#set($inputRoot = $input.path('$'))",
                           "{",
                            "\"S3_Bucket\": \"$input.params('project')-${stageVariables.mode}-files-${stageVariables.domain}\"",
                            ",\"configurationURI\": \"s3://$input.params('project')-${stageVariables.mode}-files-${stageVariables.domain}/config/Qrvey2.properties\"",
                            ",\"UserID\": \"$input.params('userid')\"",
                            ",\"JobID\": \"${context.requestId}\"",
                            ",\"command\": \"PostProcess$input.params('form')\"",
                            "}"
                        ]
                    ]}},
                    "IntegrationResponses": [{
                        "ResponseParameters": {"method.response.header.Access-Control-Allow-Origin": {"Fn::Join": [
                            "",
                            [
                                "'",
                                {"Ref": "CorsOrigin"},
                                "'"
                            ]
                        ]}},
                        "SelectionPattern": "",
                        "StatusCode": "200"
                    }]
                },
                "MethodResponses": [{
                    "ResponseParameters": {"method.response.header.Access-Control-Allow-Origin": true},
                    "StatusCode": "200"
                }]
            }
        },
        "OVWSRMApiDeployment": {
            "Type": "AWS::ApiGateway::Deployment",
            "DependsOn" : ["OVWSRMSurveyIdRespondentReportsOptions", "OVWSRMSurveyIdRespondentReportsGet"],
            "Condition" : "DeployApiYes",
            "Properties": {
                "Description": "Initial Deployment",
                "RestApiId": {"Ref": "OVWSRMApi"},
                "StageDescription": {
                    "Variables": {
                        "mode": {"Fn::ImportValue" : {"Fn::Sub" : "${ProjectToolsStack}-SelectedTargetEnvironment"}},
                        "domain": {"Fn::ImportValue" : {"Fn::Sub" : "${ProjectToolsStack}-SelectedTargetDomain"}}
                    },
                    "MethodSettings": [
                        {
                          "ResourcePath": "/survey/{userid}",
                          "HttpMethod": "GET"
                        }, 
                        {
                          "ResourcePath": "/survey/{userid}",
                          "HttpMethod": "OPTIONS"
                        }
                    ]
                },
                "StageName": {"Fn::ImportValue" : {"Fn::Sub" : "${ProjectToolsStack}-SelectedTargetEnvironment"}}
            }
        },
        "LambdaInvokePermission": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName" : {"Fn::ImportValue" : {"Fn::Sub" : "${ProjectToolsStack}-S3TriggerLambdaArn"}},
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {"Fn::Join": [
                        "",
                        [
                            "arn:aws:execute-api:",
                            {"Ref": "AWS::Region"},
                            ":",
                            {"Ref": "AWS::AccountId"},
                            ":",
                            {"Ref": "OVWSRMApi"},
                            "/*/GET/survey/*"
                        ]
                    ]}
          }
        }        
    },
    "Outputs": {
        "OVWSRMApiName": {
            "Value": {"Ref": "APIName"},
             "Description": "The name given to the API when the stack was created."
         },
        "PostProcessingURL": {
            "Value": {"Fn::Join": 
                    [
                            "",
                            [
                                "https://",
                                {"Ref": "OVWSRMApi"},
                                ".execute-api.",
                                {"Ref": "AWS::Region"},
                                ".amazonaws.com/",
                                {"Fn::ImportValue" : {"Fn::Sub" : "${ProjectToolsStack}-SelectedTargetEnvironment"}},
                                "/survey/{Survey_id}?project=",
                                {"Fn::ImportValue" : {"Fn::Sub" : "${ProjectToolsStack}-SelectedProjectPrefix"}},
                                "&qrveyid={QrveyID}&form={FormName}"
                            ]
                    ]
            },
            "Description": "The generated API endpoint URL to be used in the invocation JavaScript.",
            "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-PostProcessingURL" }}
        }
    }
}